package com.test.PageAction.PreBuildMgmt;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.testng.Assert;

import com.test.PageAction.LoginLogout.BasePage;

public class PreBuildStore_Page extends BasePage {
	
	String btnname="申请冻结";
	
	public PreBuildStore_Page(WebDriver driver) throws Exception{
		super(driver);
	}
	
	//进入筹建门店页面
	public void preBuildStore() throws Exception{
		Thread.sleep(1000);
		findElement("prebuildObject").click();
		Thread.sleep(1000);
		findElement("constructstoreObject").click();
		WebElement iframeElement = findElement("iframeObject");
		driver.switchTo().frame(iframeElement);	
	}
	
	//查询功能
	public void preBuildStore_search() throws Exception{
		//根据门店名称查询
		Thread.sleep(1000);
		findElement("projectidObject").sendKeys(getTestData("项目编码_prebulidstore"));;
		Thread.sleep(1000);
		findElement("searchBtnObject").click();
		//验证查询结果
		Thread.sleep(1000);
		AssertEqualsFromExcel(findElement("storeIDObject").getText(), "门店ID_prebulidstore");
		AssertEqualsFromExcel(findElement("projectObject").getText(), "项目编码_prebulidstore");
		AssertEqualsFromExcel(findElement("storeNameObject").getText(), "门店_prebulidstore");
//		AssertEqualsFromExcel(findElement("brandObject").getText(), "品牌_prebulidstore");
//		AssertEqualsFromExcel(findElement("brandTypeObject").getText(), "性质_prebulidstore");
//		AssertEqualsFromExcel(findElement("lawAddrObject").getText(), "法定地址_prebulidstore");
//		AssertEqualsFromExcel(findElement("roomNumObject").getText(), "立项房间数_prebulidstore");
//		AssertEqualsFromExcel(findElement("storeStateObject").getText(), "分店状态_prebulidstore");
//		AssertEqualsFromExcel(findElement("progressObject").getText(), "筹建进度_prebulidstore");
//		AssertEqualsFromExcel(findElement("signTimeObject").getText(), "签约日期_prebulidstore");
//		AssertEqualsFromExcel(findElement("standarTimeObject").getText(), "签约达标日期_prebulidstore");
		AssertEqualsFromExcel(findElement("searchpageObject").getText(), "共一条记录_searchcontain");
				
	}
	
	//查看详情功能
	public void preBuildStore_details() throws Exception{
		Thread.sleep(1000);
		findElement("detailsObject").click();
		
		//验证正常打开查看页面
		Thread.sleep(1000);
		AssertEqualsFromExcel(findElement("detailscontentObject").getText(),"详情_prebulidstore");
	}
	
	//提交冻结申请功能
	public void preBuildStore_freezen() throws Exception{
		Thread.sleep(1000);
		findElement("freezenbtnObject").click();
		Thread.sleep(4000);
		findElement("remarkObject").sendKeys(getTestData("申请冻结备注_prebulidstore"));
		Thread.sleep(1000);
		findElement("submitbtnObject").click();
		
		Thread.sleep(2000);
		Assert.assertFalse(isElementPresent("freezenbtnObject"));
		System.out.println(this.getClass().getSimpleName() + "提交冻结申请成功");
	}
	
	//查看冻结日志功能
	public void preBuildStore_freezenlog() throws Exception{	
		Thread.sleep(1000);
		findElement("freezenlogBtnObject").click();
		//验证查看冻结跟踪日志功能
		Thread.sleep(1000);
		AssertEqualsFromExcel(findElement("logdetailObject").getText(),"跟踪日志_prebulidstore");
		
		//关闭日志
		Thread.sleep(1000);
		findElement("freelogbtnObject").click();
		//返回列表
		Thread.sleep(500);
		findElement("storelistObject").click();
		
	}
	
	
	//重置功能
	public void preBuildStore_reset() throws Exception{
		Thread.sleep(1000);
		findElement("resetBtnObject").click();
			
		Thread.sleep(2000);
		Assert.assertTrue(findElement("projectidObject").getText().equals(""));
		Assert.assertTrue(findElement("listcontainsObject").getText().contains("显示第 1 到第 10 条记录"));
		}
	
	

}
