package com.test.PageAction.AccidentReport;

import org.openqa.selenium.Alert;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import com.test.PageAction.Login.BasePage;
import org.testng.Assert;

public class AccidentReport_Page extends BasePage{
	
	String sgbt="自动化新增事故标题sgbt"+getDateTime();//新增时事故标题
	String sgsj=getDateTime();//新增时事故时间
	
	
	public AccidentReport_Page(WebDriver driver) throws Exception {
		super(driver);
	}
	
	public void accidentReport() throws Exception{
		// 进入页面
		implicitlyWait(1000);
		Thread.sleep(1000);
		findElement("sgbgObject").click();
		Thread.sleep(2000);
		findElement("sgbg1Object").click();
		WebElement iframeElement =findElement("iframeObject");
		driver.switchTo().frame(iframeElement);
	}
	
	public void accidentReport_Search() throws Exception{
		//查询功能
		findElement("projectIdObject").sendKeys(getTestData("项目编码_sgbg"));
		findElement("storeNameObject").sendKeys(getTestData("门店名称_sgbg"));	
		selectByVisibleTextFromExcel(findElement("brandTypeIdObject"),"性质_sgbg");
		findElement("nameObject").sendKeys(getTestData("事故标题_sgbg"));	
		sendKeystoReadOnlyField(findElement("startTimeObject"), "开始时间_sgbg");
		findElement("searchBtnObject").click();
		Thread.sleep(1000);	
		//验证查询
		AssertEqualsFromExcel(findElement("projectidTextObject").getText(),"项目编码_sgbg");
		AssertEqualsFromExcel(findElement("stroreTextObject").getText(),"门店名称_sgbg");	
		AssertEqualsFromExcel(findElement("brantypeTextObject").getText(),"性质_sgbg");	
		AssertEqualsFromExcel(findElement("sgbtTextObject").getText(),"事故标题_sgbg");
	}	
	
	public void accidentReport_Reset() throws Exception{
		//重置功能
		findElement("resetBtnObject").click();
		Thread.sleep(2000);
		Assert.assertTrue(findElement("projectIdObject").getAttribute("value").isEmpty());
		Assert.assertTrue(findElement("storeNameObject").getAttribute("value").isEmpty());
		Assert.assertTrue(findElement("nameObject").getAttribute("value").isEmpty());
		AssertNotSameFromExcel(findElement("sgbtTextObject").getText(),"事故标题_sgbg");	
		if (findElement("pageObject").isDisplayed()){
			Assert.assertTrue(findElement("recordObject").getText().contains("显示第 1 到第 10 条记录"));
		}
		else{
			Assert.assertTrue(!findElement("recordObject").getText().contains("显示第 1 到第 10 条记录"));
		}	
	}	
	
	public void accidentReport_Add() throws Exception{
		//添加事故功能
		findElement("addNewObject").click();
		Thread.sleep(1000);	
		//先选择门店
		findElement("storeInputObject").sendKeys(getTestData("门店名称2_sgbg"));	
		findElement("storeserchBtnObject").click();
		Thread.sleep(1000);		
		findElement("storeObject").click();
		Thread.sleep(1000);	
		//添加界面
		findElement("sgbtInputObject").sendKeys(sgbt);	
		selectByVisibleText(findElement("sglxSelObject"), "----财物失窃/客房");
		findElement("sgTimeObject").sendKeys(sgsj);	
		findElement("submitBtnObject").click();
		Thread.sleep(2000);	
		//验证添加
		findElement("storeNameObject").sendKeys(getTestData("门店名称2_sgbg"));	
		selectByVisibleText(findElement("categoryObject"), "----财物失窃/客房");
		findElement("nameObject").sendKeys(sgbt);	
		findElement("searchBtnObject").click();
		Thread.sleep(1000);	
		Assert.assertEquals(findElement("sgbtTextObject").getText(),sgbt);
	}
	
	public void accidentReport_ViewDetail() throws Exception{
	//查看功能(调用查询)
		accidentReport_Search();
		findElement("checkBtnObject").click();
		Thread.sleep(1000);	
		//验证查看
		AssertEqualsFromExcel(findElement("ckstorenameObject").getText(),"门店名称_sgbg");
		AssertEqualsFromExcel(findElement("cksgbtObject").getText(),"事故标题_sgbg");	
		AssertEqualsFromExcel(findElement("cksglxObject").getText(),"事故类型_sgbg");	
		findElement("sgbglbObject").click();
		Thread.sleep(1000);
		Assert.assertTrue(findElement("searchBtnObject").isDisplayed());
	}
	
	public void accidentReport_Change() throws Exception{
	//修改功能(调用查询)
		accidentReport_Search();
		findElement("changeBtnObject").click();
		Thread.sleep(1000);	
		//修改界面
		selectByVisibleTextFromExcel(findElement("sglxSelObject"),"事故类型2_sgbg");
		findElement("submitBtnObject").click();
		Thread.sleep(2000);	
		//验证修改
		accidentReport_Search();
		AssertEqualsFromExcel(findElement("sglxTextObject").getText(),"事故类型3_sgbg");
		//恢复修改数据
		findElement("changeBtnObject").click();
		Thread.sleep(1000);	
		//修改回原来的数据
		selectByVisibleTextFromExcel(findElement("sglxSelObject"),"事故类型1_sgbg");
		findElement("submitBtnObject").click();
		Thread.sleep(2000);
		//验证恢复修改
		accidentReport_Search();
		AssertEqualsFromExcel(findElement("sglxTextObject").getText(),"事故类型_sgbg");
	}
	
	public void accidentReport_Delete() throws Exception{	
		//删除新增的那条记录
		findElement("resetBtnObject").click();
		findElement("nameObject").sendKeys(sgbt);	
		findElement("searchBtnObject").click();
		Thread.sleep(1000);	
		//删除功能（数据删除）
		findElement("deleteBtnObject").click();
		Thread.sleep(2000);
		//浏览器自带确定框
		Alert JavaScriptPrompt = driver.switchTo().alert();
		JavaScriptPrompt.accept();
		Thread.sleep(2000);
		//验证删除
		findElement("tipObject").click();
		findElement("closetipObject").click();
		Thread.sleep(2000);	
		findElement("nameObject").sendKeys(sgbt);	
		findElement("searchBtnObject").click();
		Thread.sleep(1000);	
		Assert.assertEquals(findElement("emptyObject").getText(), "没有找到匹配的记录");//验证删除后查不到记录
	}
}
