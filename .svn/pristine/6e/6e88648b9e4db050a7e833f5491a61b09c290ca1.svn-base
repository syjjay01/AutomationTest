package com.test.PageAction.DevelopmentMgmt;


import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.testng.Assert;

import com.test.PageAction.LoginLogout.BasePage;

public class Contract_Page extends BasePage {

	String projectName = getWriteData("合同_ContractProcess");
	

	public Contract_Page(WebDriver driver) throws Exception {
		super(driver);
	}

	public void contract() throws Exception {
		implicitlyWait(1000);
		findElement("devMgmtObject").click();
		Thread.sleep(1000);
		findElement("contractObject").click();
		WebElement iframeElement = findElement("iframeObject");
		driver.switchTo().frame(iframeElement);
	}

	public void contract_Search() throws Exception {
		findElement("projectNameObject").sendKeys(getTestData("项目名称_ht"));
		findElement("searchBtnObject").click();
		Thread.sleep(1000);
		AssertEqualsFromExcel(findElement("projectNameTextObject").getText(), "项目名称_ht");
	}

	public void contract_Reset() throws Exception {
		findElement("resetBtnObject").click();
		Thread.sleep(1000);
		Assert.assertTrue(findElement("recordTextObject").getText().contains("显示第 1 到第 10 条记录"));
	}

	public void contract_View() throws Exception {
		contract_Search();
		findElement("viewBtnObject").click();
		Thread.sleep(1000);
		AssertEqualsFromExcel(findElement("projectNameObject_viewPage").getText(), "项目名称_ht");
	}

	// 进入合同详情，查看合同，修改合同
	public void contract_Update() throws Exception {
	/*	contract_Search();
		findElement("viewBtnObject").click();*/
		Thread.sleep(1000);
		// 修改未审核的合同
		findElement("modifyBtnObject").click();
		Thread.sleep(1000);
		selectByVisibleTextFromExcel(findElement("shipFlagObject"), "更改类别_ht");
		findElement("submitBtnObject").click();
		Thread.sleep(2000);

		// 修改回原来的值
		contract_Search();
		findElement("viewBtnObject").click();
		Thread.sleep(1000);
		findElement("modifyBtnObject").click();
		Thread.sleep(1000);
		selectByVisibleTextFromExcel(findElement("shipFlagObject"), "原类别_ht");
		findElement("submitBtnObject").click();
		Thread.sleep(2000);
	}

	
	// 转款
	public void contract_Transfer() throws Exception {
	
		Thread.sleep(1000);		
		findElement("transferFundBtnObject").click();// 转款按钮
		findElement("projectIdObject").sendKeys(getTestData("项目编码_receivableJoinFee"));// 输入项目编码
		findElement("serachBtnObject").click();// 点击查询
		Thread.sleep(1000);
		findElement("targetProject").click();// 选择所查询的项目名称

		findElement("outFeeObject").sendKeys(getTestData("转出加盟费_ht"));// 转出栏-输入转款金额_加盟费
		findElement("transferFeeObjcet").sendKeys(getTestData("转入加盟费_ht"));// 转入栏-输入转款金额_加盟费
		findElement("remarkObjcet").sendKeys(getTestData("备注_ht"));// 备注栏
		Thread.sleep(1000);
		findElement("transferSubmitBtnObject").click();// 确定提交
		Thread.sleep(1000);
		findElement("determineBtnObject").click();// 确定按钮
		Thread.sleep(2000);
		// 验证
		findElement("receiptBtnObject").click();// 收款详情
		Assert.assertEquals(findElement("moneyObject").getText(), "转出");
		Thread.sleep(1000);
		findElement("closeBtnObject").click();// 关闭窗口
		Thread.sleep(1000);
	}

	// 退款
	public void contract_Refund() throws Exception {
		findElement("refundBtnObject").click();// 退款按钮
		findElement("back_money").sendKeys(getTestData("退款_ht"));// 输入退款金额-加盟费
		findElement("receiveFeeAccountObject").sendKeys(getTestData("收款账号_ht"));// 收款账号
		selectByVisibleTextFromExcel(findElement("refundFeeAccountObject"), "退款账号_ht");// 退款账号

		sendKeystoReadOnlyField(findElement("sendedTimeObject"), "退款日期_ht");// 退款日期
		findElement("sendedPersonObject").sendKeys(getTestData("退款人_ht"));// 退款人
		findElement("remarkObject").sendKeys(getTestData("退款备注_ht"));// 备注
		Thread.sleep(1000);
		findElement("confirmSubmissionBtnObject").click();// 确认提交
		Thread.sleep(1000);
		findElement("determineBtnObject").click();// 确认
		Thread.sleep(3000);
		// 验证
		findElement("receiptBtnObject").click();// 收款详情按钮
		Assert.assertEquals(findElement("moneyObject").getText(), "退款");
		Thread.sleep(1000);
		findElement("closeBtnObject").click();// 关闭窗口
		Thread.sleep(1000);
	}

	// 筹建信息修改
	public void contract_PreBuildInformation() throws Exception {
		
		Thread.sleep(1000);
		
		findElement("updateBtnObject").click();// 筹建信息修改按钮
		Thread.sleep(3000);
		findElement("managerPhone").clear();// 清空筹建负责人
		findElement("managerPhone").sendKeys(getTestData("筹建人电话_ht"));// 输入新的电话

		findElement("confirmSubmitButton").click();// 确定提交
		Thread.sleep(1000);
		AssertNotSameFromExcel(findElement("phoneObject").getText(), "筹建人电话_ht");// 验证是否修改成功
		Thread.sleep(1000);
		// 修改回原值
		findElement("updateBtnObject").click();// 筹建信息修改按钮
		Thread.sleep(3000);
		findElement("managerPhone").clear();// 清空筹建负责人
		findElement("managerPhone").sendKeys(getTestData("原筹建人电话_ht"));// 输入原电话
		Thread.sleep(1000);
		findElement("confirmSubmitButton").click();// 确定提交
		Thread.sleep(1000);
		AssertNotSameFromExcel(findElement("phoneObject").getText(), "原筹建人电话_ht");// 验证是否修改成功

	}

	// 管理员退回：未立项，审核状态为已审核的合同
	public void contract_AdministratorReturned() throws Exception {
		
		contract_Search();		
		findElement("searchBtnObject").click();
		Thread.sleep(1000);
		// 验证合同是否已审核
		if (findElement("approvalStatusObject").getText().contains("主：待审")) {
			review();//审核操作
			findElement("htlbBtnObject").click();// 返回合同列表
			contract_Search();
			findElement("viewBtnObject").click();
		
			Thread.sleep(2000);
			back();//退回操作

		} else {
			findElement("viewBtnObject").click();
			Thread.sleep(1000);
			back();

		}

		// 审核合同：保证该合同存在管理员退回功能
		/*findElement("projectNameObject").sendKeys(getTestData("项目名称_ht"));
		findElement("searchBtnObject").click();
		Thread.sleep(1000);
		review();*/

	}
	
	//证照详情
	public void contract_licenseDetails() throws Exception {
	
		findElement("licenseBtnObject").click();
		Thread.sleep(1000);
		Assert.assertTrue(findElement("licenseNameObject").getText().equals("证照名称"));//验证弹框是否出现“证照名称”字段
		Thread.sleep(1000);
		findElement("closeLicenseObject").click();		
	}
	
	// 跟进人修改
	/*
	 * 前提条件：存在两个以上的跟进人
	 * 
	*/
	public void contract_ChangeFollower() throws Exception {

		findElement("followerBtnObject").click();// 跟进人修改按钮
		Thread.sleep(1000);

		WebElement firstRadio = findElement("firRadioObject");// 第一个单选框
		WebElement secondRadio = findElement("secRadioObject");// 第二个单选框

		String text1 = firstRadio.getText();// 第一个单选框的文本
		String text2 = secondRadio.getText();// 第二个单选框的文本
		String text3 = findElement("pageFollowerObject").getText();// 合同详情开发/跟进人的文本
		

		if (firstRadio.isSelected() && secondRadio.isDisplayed()) {
			secondRadio.click();
			Thread.sleep(1000);
			findElement("defineBtnObject").click();// 确定
			Thread.sleep(2000);
			Assert.assertTrue(text3.contains(text2));
			
		} else if (!firstRadio.isSelected()) {
			firstRadio.click();
			Thread.sleep(2000);
			findElement("defineBtnObject").click();// 确定
			Thread.sleep(2000);
			Assert.assertTrue(text3.contains(text1));
			
		}

		/*
		 * findElement("followerObject").click();//选择新的跟进人 Thread.sleep(1000);
		 * findElement("defineBtnObject").click();//确定 Thread.sleep(5000);
		 * //验证是否修改成功
		 * Assert.assertTrue(findElement("newFollowerObject").getText().contains
		 * ("李文静")); Thread.sleep(1000); //修改回原值
		 * findElement("followerBtnObject").click();//跟进人修改按钮
		 * Thread.sleep(1000); findElement("oldFollowerObject").click();//选择原跟进人
		 * Thread.sleep(1000); findElement("defineBtnObject").click();//确定
		 * Thread.sleep(2000); //验证是否修改成功
		 * Assert.assertTrue(findElement("newFollowerObject").getText().contains
		 * ("高丽")); Thread.sleep(2000);
		 */
	}
	
	
/*	// 查询后进入详情页面
	public void contract_Details() throws Exception {
		Thread.sleep(1000);
		findElement("projectNameObject").sendKeys(getTestData("项目名称_ht"));
		findElement("searchBtnObject").click();
		Thread.sleep(1000);
		findElement("viewBtnObject").click();
		Thread.sleep(1000);
	}*/

	// 审核操作
	public void review() throws Exception {
		findElement("checkBtnObject").click();
		Thread.sleep(1000);
		// 超管角色，代表开发专员和开发领导审核，所以审核两次
		findElement("passBtnObject").click();
		findElement("confirmCheckBtnObject").click();
		Thread.sleep(1000);
		findElement("confirmBtnObject").click();
		Thread.sleep(1000);

		findElement("passBtnObject").click();
		findElement("confirmCheckBtnObject").click();
		Thread.sleep(1000);
		findElement("confirmBtnObject").click();
		Thread.sleep(1000);
		System.out.println(this.getClass().getSimpleName() + "---合同审核状态：" + findElement("checkStatusObject").getText());

	}

	// 管理员退回
	public void back() throws Exception {
		findElement("backBtnObject").click();// 管理员退回
		findElement("bcakResonObject").sendKeys(getTestData("退回原因_ht"));// 退回原因
		findElement("backBtn").click();// 确认退回
		Thread.sleep(1000);
		// 验证是否退回成功：跟踪查看记录
		findElement("trackBtnObject").click();// 跟踪
		Thread.sleep(1000);
		Assert.assertTrue(findElement("contractTrackObject").getText().contains("管理员退回"));
		Thread.sleep(1000);
		findElement("closeButton").click();// 关闭窗口
		findElement("htlbBtnObject").click();// 返回合同列表
	}
	
	// 审核通过合同
		public void contract_Approve() throws Exception {
			driver.switchTo().defaultContent();
			contract();
			Thread.sleep(1000);
			findElement("projectNameObject").sendKeys(projectName);
			findElement("searchBtnObject").click();
			Thread.sleep(1000);

			if (findElement("jmfbzTextObject").getText().equals("-")) {
				findElement("checkBtnObject").click();
				Thread.sleep(1000);
				findElement("modifyButtonObject").click();
				Thread.sleep(1000);
				selectByVisibleTextFromExcel(findElement("initialFeeTextObject"), "加盟费标准重填_ht");
				Thread.sleep(1000);
				selectByVisibleTextFromExcel(findElement("managementFeeSelectObject"), "管理费重填_ht");
				Thread.sleep(1000);
				findElement("confirmSubmitBtnObject").click();
				Thread.sleep(2000);

				findElement("projectNameObject").sendKeys(projectName);
				findElement("searchBtnObject").click();
				Thread.sleep(1000);

				review();
			} else {

				review();
			}

		}

		// 转品牌
		public void contract_ChangeBrand() throws Exception {
			driver.switchTo().defaultContent();// 页面跳转回全球门店
			contract();
			Thread.sleep(1000);
			findElement("projectNameObject").sendKeys(projectName);
			findElement("searchBtnObject").click();
			Thread.sleep(1000);
			findElement("viewBtnObject").click();
			Thread.sleep(1000);

			// 点击转品牌按钮
			findElement("changeBrandBtnObject").click();
			Thread.sleep(1000);
			// 依次输入项目、分店名称、品牌、性质、标签、立项房间数、加盟费标准、签约日期、生效日期、截止日期、加盟费、筹建指导费、管理费和运营支持费
			findElement("projectNameObject").sendKeys(getTestData("项目/分店名称_ht") + getDateTime());
			selectByVisibleTextFromExcel(findElement("brandObject"), "品牌_ht");
			selectByVisibleTextFromExcel(findElement("brandTypeIdObject"), "性质_ht");
			selectByVisibleTextFromExcel(findElement("brandStandardIdObject"), "品牌标准_ht");
			selectByVisibleTextFromExcel(findElement("tableObject"), "标签_ht");

			findElement("payRateObject").sendKeys(getTestData("加盟费标准_ht"));

			sendKeystoReadOnlyField(findElement("signingTimeObject"), "签约日期_ht");
			sendKeystoReadOnlyField(findElement("contractStartTimeObject"), "生效日期_ht");
			sendKeystoReadOnlyField(findElement("contractEndTimeObject"), "截止日期_ht");
			Thread.sleep(1000);

			// 点击提交申请
			findElement("submissionBtnObject").click();
			Thread.sleep(3000);
			findElement("confirmationButtonObject").click();
			Thread.sleep(8000);

			// 验证是否转品牌成功
			try {
				Assert.assertTrue(findElement("verificationProjectName").getText().contains(projectName));
			} catch (AssertionError ex) {
				Thread.sleep(5000);
				Assert.assertTrue(findElement("verificationProjectName").getText().contains(projectName));
			}

		}

}
