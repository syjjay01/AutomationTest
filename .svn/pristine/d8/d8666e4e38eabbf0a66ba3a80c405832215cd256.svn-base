<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. -->
  <project basedir="." default="resultForRegressionTest" name="qqmdUIAutomation">
  	<property name="testoutput.dir" value="${basedir}/test-output/TestResult"/><!--配置测试结果输出地址-->	
    <path id="run.classpath">
        <fileset dir="${basedir}/libs">
            <include name="**/*.jar"/>
        </fileset>
    </path>
    <path id="classes">
        <path refid="run.classpath"/>
        <pathelement location="${basedir}/bin"/>
    </path>
  	
  	<!--创建testng任务，引入所需包-->
  	<taskdef resource="testngtasks"  classpathref="run.classpath"/>
  	
  	<!--删除bin文件，在构建时需要重新编译生成.class，name随意起名，也删除screenshots文件夹-->
  	<target name="clean">
  		<delete dir="bin"/>
  		<delete dir="screenshots"/>	
  	</target>
  		
  	<!--编译生成.class，depends表示，需要优先执行clean-->
  	<target name="compile" depends="clean">
  		<!--创建bin目录，可以是绝对路径，也可以是/bin跟build.xml同级路径 -->
  		<mkdir dir="bin"/>
  		<!--执行javac，来编译src下的.java，然后将编译成功的.class文件保存到bin中，其中需要jar包-->
  		<javac srcdir="src" destdir="bin" classpathref="run.classpath" includeantruntime="on" encoding="UTF-8">
  			<!--如果java中用到UTF-8，则需要增加下面的-->
  			<compilerarg line="-encoding GBK "/>
  		</javac>
  	</target>
  	
  	<tstamp>   
  	    <format property="CURTIME" pattern="yyyyMMdd_HHmmss" locale="cn"/>   <!--设置当前时间-->
  	</tstamp> 
  	
  	<!--执行testng文件，depends表示，优先执行compile-->
  	<target name="runForSmokeTest" depends="compile">
  		<!--创建testng节点，执行"classes"下面的.class文件-->
  		<testng classpathref="classes" delegateCommandSystemProperties="true">
  			<!--制定xml文件所在目录-->
  			<xmlfileset dir="${basedir}">
  				<!--制定xml文件-->
  				<include name="testngSmokeTest.xml"/>
  			</xmlfileset>
  			<jvmarg value="-Dfile.encoding=UTF-8"/>  <!-- 定义生成报告的编码 -->
  		</testng>
  	</target>

  	<target name="resultForSmokeTest" depends="runForSmokeTest">
  		<xslt in="test-output/testng-results.xml" style="test-output/testng-results.xsl" 
  			  out="${testoutput.dir}/qqmdTestReport.html">
  		  	  <param name="testNgXslt.outputDir" expression="${testoutput.dir}"/>
  		  	  <param name="testNgXslt.showRuntimeTotals" expression="true"/>
  		  	  <param name="testNgXslt.sortTestCaseLinks" expression="true" />
  		      <param name="testNgXslt.testDetailsFilter" expression="FAIL,SKIP,PASS,CONF,BY_CLASS"/>
  			  <classpath refid= "run.classpath" />
  		 </xslt>
  		 <zip destfile="test-output/TestResult-bak/TestResult-${CURTIME}.zip">
  		     <fileset dir="${testoutput.dir}"/>
  		 </zip> <!-- 对测试结果做备份，目录放在destfile指定的目录中 -->
  	</target>
  	
  	<!--执行testng文件，depends表示，优先执行compile-->
  	<target name="runForRegressionTest" depends="compile">
  		<!--创建testng节点，执行"classes"下面的.class文件-->
  		<testng classpathref="classes" delegateCommandSystemProperties="true">
  			<!--制定xml文件所在目录-->
  			<xmlfileset dir="${basedir}">
  				<!--制定xml文件-->
  				<include name="testngRegressionTest.xml"/>
  			</xmlfileset>
  			<jvmarg value="-Dfile.encoding=UTF-8"/>  <!-- 定义生成报告的编码 -->
  		</testng>
  	</target>
  	<target name="resultForRegressionTest" depends="runForRegressionTest">
  		<xslt in="test-output/testng-results.xml" style="test-output/testng-results.xsl" 
  			  out="${testoutput.dir}/qqmdTestReport.html">
  		  	  <param name="testNgXslt.outputDir" expression="${testoutput.dir}"/>
  		  	  <param name="testNgXslt.showRuntimeTotals" expression="true"/>
  		  	  <param name="testNgXslt.sortTestCaseLinks" expression="true" />
  		      <param name="testNgXslt.testDetailsFilter" expression="FAIL,SKIP,PASS,CONF,BY_CLASS"/>
  			  <classpath refid= "run.classpath" />
  		 </xslt>
  		 <zip destfile="test-output/TestResult-bak/TestResult-${CURTIME}.zip">
  		     <fileset dir="${testoutput.dir}"/>
  		 </zip> <!-- 对测试结果做备份，目录放在destfile指定的目录中 -->
  	</target>
</project>
